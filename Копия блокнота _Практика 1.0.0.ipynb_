{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1M-O_KUCtKLJnPKgWsQQu9bkGfa2vOHnO","timestamp":1732010264204}]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["ФИО: Сучков Павел Алексеевич ( работа зачтена 19 11 2024)"],"metadata":{"id":"fLDS5f_mCnPa"}},{"cell_type":"markdown","source":["# Задание (совместное с преподавателем)\n","\n","\n"],"metadata":{"id":"-CSHUbWzCqeM"}},{"cell_type":"markdown","source":["Напишите систему для учёта отпусков с возможностью узнавать, сколько дней отпуска осталось у того или иного сотрудника.\n","Для этого создайте класс Employee со следующими методами:\n","\n","- Метод consume_vacation должен отвечать за списание дней отпуска.\n","\n","Единственный параметр этого метода (кроме self) — количество потраченных отпускных дней (целое число).\n","\n","При вызове метода consume_vacation соответствующее количество дней должно вычитаться из общего числа доступных отпускных дней сотрудника.\n","\n","Чтобы определить число доступных отпускных дней конкретного сотрудника, в классе опишите атрибут экземпляра remaining_vacation_days, который по умолчанию будет равен значению атрибута класса vacation_days, и используйте этот атрибут в работе метода.\n","\n","- Метод get_vacation_details должен возвращать остаток отпускных дней сотрудника в формате: ```Остаток отпускных дней: <число>.```\n","\n","\n","Чтобы проверить работу программы:\n","1. Создайте экземпляр класса Employee.\n","2. Вызовите метод consume_vacation, указав подходящее значение аргумента, например 7.\n","3. Вызовите метод get_vacation_details."],"metadata":{"id":"a_flBjZOCwYz"}},{"cell_type":"code","source":["class Employee:\n","\n","  vacation_days = 28\n","\n","  def __init__(self, first_name, second_name, gender):\n","    self.first_name = first_name\n","    self.second_name = second_name\n","    self.gender = gender\n","    self.remaining_vacation_days = self.vacation_days\n","\n","  def consume_vacation(self, days): self.remaining_vacation_days -= days\n","\n","  def get_vacation_details(self):\n","    return f\"Остаток отпуска: {self.remaining_vacation_days} дней\"\n","\n","\n"],"metadata":{"id":"G4bUraN4CwBI","executionInfo":{"status":"ok","timestamp":1732011162950,"user_tz":-300,"elapsed":278,"user":{"displayName":"UniqueG","userId":"12397292054922786937"}}},"execution_count":5,"outputs":[]},{"cell_type":"code","source":["emp = Employee(\"Мистер\", \"Пропер\", \"Assault vehicle\")\n","\n","emp.consume_vacation(7)\n","\n","print(emp.remaining_vacation_days)\n","print(emp.get_vacation_details())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"baUANqVm5cGl","executionInfo":{"status":"ok","timestamp":1732011163888,"user_tz":-300,"elapsed":6,"user":{"displayName":"UniqueG","userId":"12397292054922786937"}},"outputId":"3725cbd6-ac60-469d-e664-6fc79d59c436"},"execution_count":6,"outputs":[{"output_type":"stream","name":"stdout","text":["21\n","Остаток отпуска: 21 дней\n"]}]},{"cell_type":"markdown","source":["# Задание 1"],"metadata":{"id":"8XGka5GtEBK1"}},{"cell_type":"markdown","source":["Задание:\n","\n","Создайте класс с именем Rectangle который имеет:\n","- Атрибуты ширины и высоты.\n","- Метод расчета площади.\n","- Метод расчета периметра.\n","- Метод отображения размеров прямоугольника.\n","\n","Создайте экземпляр класса Rectangleи продемонстрируйте его функциональность."],"metadata":{"id":"jQ4qqd8nEZBY"}},{"cell_type":"code","source":["class Rectangle:\n","\n","  def __init__(self, h, l):\n","    self.h = h\n","    self.l = l\n","\n","  def perimeter(self):\n","    return self.h * 2 + self.l * 2\n","\n","  def area(self):\n","    return self.h * self.l\n","\n","  def display(self):\n","    print(f\"It's a rectangle {self.h}x{self.l}\")\n","\n","\n","smol = Rectangle(10, 20)\n","\n","print(smol.perimeter())\n","print(smol.area())\n","smol.display()"],"metadata":{"id":"dG6uNPqTEAvt","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1732015563514,"user_tz":-300,"elapsed":287,"user":{"displayName":"UniqueG","userId":"12397292054922786937"}},"outputId":"275c3641-d17f-4d40-f267-4583def983a0"},"execution_count":16,"outputs":[{"output_type":"stream","name":"stdout","text":["60\n","200\n","It's a rectangle 10x20\n"]}]},{"cell_type":"markdown","source":["# Задание 2"],"metadata":{"id":"0ct1u6lqE73j"}},{"cell_type":"markdown","source":["Задание: Создайте мини версию банковской системы:\n","\n","\n","Инструкции:\n","\n","1. Создайте класс BankAccountсо следующими атрибутами:\n","    - account_holder -  владелец счета\n","    - balance - баланс счета\n","\n","2. Реализуйте следующие методы:\n","    - Метод для инициализации владельца счета: имя владельца счета и установите начальный баланс на 0.\n","    - deposit(amount): Добавьте указанную сумму к балансу.\n","    - withdraw(amount): Вычесть указанную сумму из баланса, если средств достаточно; в противном случае вывести предупреждение.\n","    - get_balance(): Возврат текущего баланса.\n","\n","\n","Создайте объект класса и продемонстрируйте его возможности"],"metadata":{"id":"FOpIpcLxE-WK"}},{"cell_type":"code","source":["class BankAccount:\n","\n","  balance_ = 0\n","\n","  def __init__(self, account_holder_name, account_holder_surname):\n","    self.account_holder_name = account_holder_name\n","    self.account_holder_surname = account_holder_surname\n","    self.balance = self.balance_\n","\n","  def deposit(self, deposit_):\n","    self.balance += deposit_\n","\n","  def withdraw(self, withdrawal_):\n","    if self.balance >= withdrawal_:\n","      self.balance -= withdrawal_\n","    else:\n","      print(\"An error occured: Insufficient funds in the account\")\n","\n","  def get_balance(self): return f\"Your balance: {self.balance}\"\n","\n","\n","my_acc = BankAccount(\"Omen\", \"Phantom\")\n","my_acc.deposit(7000)\n","my_acc.withdraw(7)\n","\n","print(my_acc.get_balance())\n","\n","\n","\n","\n"],"metadata":{"id":"WWXNIUrCE99W","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1732012931472,"user_tz":-300,"elapsed":270,"user":{"displayName":"UniqueG","userId":"12397292054922786937"}},"outputId":"cda798ab-246a-4738-cb94-dc1b4acb4cff"},"execution_count":12,"outputs":[{"output_type":"stream","name":"stdout","text":["Your balance: 6993\n"]}]},{"cell_type":"markdown","source":["# Задание 3"],"metadata":{"id":"C5DX5Uf2FfP6"}},{"cell_type":"markdown","source":["Возьмите код и задание (Рыцарь и дракон) из предыдущей практики и реализуйте его с применением классов"],"metadata":{"id":"0cR-MYepFgz6"}},{"cell_type":"code","source":["import random as rand\n","\n","\n","\n","class Knight:\n","\n","  health = 25\n","  weapon = 25\n","  armour = 89\n","  name = \"Kris\"\n","\n","  def __init__(self):\n","    self.health = self.health\n","    self.weapon = self.weapon\n","    self.armour = self.armour\n","    self.name = self.name\n","\n","  def receive_damage(self, damage):\n","    self.health -= int(damage * (1 - self.armour // 100))\n","\n","    print(f\"The knight receided {int(damage * (1-self.armour // 100))}HP damage\")\n","    print(\"The knight's HP:\", self.health)\n","\n","  def parry(self):\n","    print(\"The knight parried the attack. He didn't receive any damage\")\n","\n","\n","class Dragon:\n","\n","  health = 255\n","  damage = 36\n","  name = \"Asriel\"\n","\n","  def __init__(self):\n","    self.health = self.health\n","    self.damage = self.damage\n","    self.name = self.name\n","\n","  def receive_damage(self, damage):\n","    self.health -= damage\n","\n","    print(f\"The dragon received {damage}HP damage\")\n","    print(\"The dragon's HP:\", self.health)\n","\n","\n","character = Knight()\n","dragon = Dragon()\n","\n","\n","def control():\n","  print(\">Fight >Parry >Spare\")\n","\n","  action = input()\n","\n","  if action == \"Fight\":\n","    damage = rand.randint(character.weapon-5, character.weapon+5)\n","    dragon.receive_damage(damage)\n","\n","    a = rand.randint(0, 1)\n","\n","    if a == 0:\n","      damage1 = rand.randint(dragon.damage-20, dragon.damage+20)\n","\n","      print(\"The dragon fights the knight back\")\n","\n","      character.receive_damage(damage1)\n","    else:\n","      print(\"The dragon was staggered back by the knight's attack\")\n","      print(\"It won't fight back this turn\")\n","\n","    return 1\n","\n","  elif action == \"Parry\":\n","    print(\"The knight parried the attack. He didn't receive any damage\")\n","\n","    return 1\n","\n","  elif action == \"Spare\":\n","    print(\"The knight pleas for mercy\")\n","\n","    a = rand.randint(0, 1)\n","\n","    if a == 0:\n","      print(\"But the dragon refused\")\n","    else:\n","      print(\"The dragon let the knight flee\")\n","      return 0\n","\n","    return 1\n","\n","  else:\n","    print(\"The knight stood and did nothing. He was burned to crisp...\")\n","    print(\"Game over\")\n","    return 0\n","\n","\n","print(\"The knight got lost in the woods to his own surprise.\")\n","print(\"The places seemes unknown to him, so he decided to wander around\", end=\" \")\n","print(\"just to see if he can find a way out.\\nBut unfortunately he\", end=\" \")\n","print(\"stumbled upon a dragon lair.\\nThe dragon was awake and wasn't happy\", end=\" \")\n","print(\"about the knight's presence at it's place.\\nSo the knight was forced\", end=\" \")\n","print(\"into a fight...\\n\")\n","print(\"The fight begins\\n\")\n","\n","while True:\n","\n","  if control() == 0: break\n","\n","  else:\n","    if character.health <= 0:\n","      print(\"The knight was defeated\")\n","      break\n","\n","    if dragon.health <= 0:\n","      print(\"The dragon was defeated\")\n","      break"],"metadata":{"id":"Oz9BZbhAFwua","colab":{"base_uri":"https://localhost:8080/","height":651},"executionInfo":{"status":"error","timestamp":1732015341811,"user_tz":-300,"elapsed":20553,"user":{"displayName":"UniqueG","userId":"12397292054922786937"}},"outputId":"9a013ddb-1ce1-4872-da28-479cb902c580"},"execution_count":15,"outputs":[{"output_type":"stream","name":"stdout","text":["The knight got lost in the woods to his own surprise.\n","The places seemes unknown to him, so he decided to wander around just to see if he can find a way out.\n","But unfortunately he stumbled upon a dragon lair.\n","The dragon was awake and wasn't happy about the knight's presence at it's place.\n","So the knight was forced into a fight...\n","\n","The fight begins\n","\n",">Fight >Parry >Spare\n","Fight\n","The dragon received 29HP damage\n","The dragon's HP: 226\n","The dragon was staggered back by the knight's attack\n","It won't fight back this turn\n","The fight begins\n","\n",">Fight >Parry >Spare\n"]},{"output_type":"error","ename":"KeyboardInterrupt","evalue":"Interrupted by user","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mKeyboardInterrupt\u001b[0m                         Traceback (most recent call last)","\u001b[0;32m<ipython-input-15-79831f0b6ca7>\u001b[0m in \u001b[0;36m<cell line: 104>\u001b[0;34m()\u001b[0m\n\u001b[1;32m    105\u001b[0m   \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"The fight begins\\n\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    106\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 107\u001b[0;31m   \u001b[0;32mif\u001b[0m \u001b[0mcontrol\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m==\u001b[0m \u001b[0;36m0\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0;32mbreak\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    108\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    109\u001b[0m   \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m<ipython-input-15-79831f0b6ca7>\u001b[0m in \u001b[0;36mcontrol\u001b[0;34m()\u001b[0m\n\u001b[1;32m     51\u001b[0m   \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\">Fight >Parry >Spare\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     52\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 53\u001b[0;31m   \u001b[0maction\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0minput\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     54\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     55\u001b[0m   \u001b[0;32mif\u001b[0m \u001b[0maction\u001b[0m \u001b[0;34m==\u001b[0m \u001b[0;34m\"Fight\"\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/ipykernel/kernelbase.py\u001b[0m in \u001b[0;36mraw_input\u001b[0;34m(self, prompt)\u001b[0m\n\u001b[1;32m    849\u001b[0m                 \u001b[0;34m\"raw_input was called, but this frontend does not support input requests.\"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    850\u001b[0m             )\n\u001b[0;32m--> 851\u001b[0;31m         return self._input_request(str(prompt),\n\u001b[0m\u001b[1;32m    852\u001b[0m             \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_parent_ident\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    853\u001b[0m             \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_parent_header\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/ipykernel/kernelbase.py\u001b[0m in \u001b[0;36m_input_request\u001b[0;34m(self, prompt, ident, parent, password)\u001b[0m\n\u001b[1;32m    893\u001b[0m             \u001b[0;32mexcept\u001b[0m \u001b[0mKeyboardInterrupt\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    894\u001b[0m                 \u001b[0;31m# re-raise KeyboardInterrupt, to truncate traceback\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 895\u001b[0;31m                 \u001b[0;32mraise\u001b[0m \u001b[0mKeyboardInterrupt\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"Interrupted by user\"\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    896\u001b[0m             \u001b[0;32mexcept\u001b[0m \u001b[0mException\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0me\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    897\u001b[0m                 \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mlog\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mwarning\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"Invalid Message:\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mexc_info\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mTrue\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mKeyboardInterrupt\u001b[0m: Interrupted by user"]}]},{"cell_type":"markdown","source":["# Дополнительное задание\n"],"metadata":{"id":"b_mJHXcQGI9t"}},{"cell_type":"markdown","source":["Задача: Система управления библиотекой\n","\n","**Цель**\n","Создайте простую систему управления библиотекой, которая позволит пользователям добавлять книги, брать книги, возвращать книги и просматривать список доступных книг.\n","\n","**Требования**\n","\n","1. **Определение класса**:\n","   – Создайте класс с именем «Book» со следующими атрибутами:\n","     - `title`\n","     - `автор`\n","     - `isbn`\n","     - `is_borrowed` (по умолчанию `False`)\n","\n","2. **Класс библиотеки**:\n","   - Создайте класс с именем Library, который управляет коллекцией книг.\n","   - Класс должен иметь следующие методы:\n","     - `__init__(self)`: инициализирует пустой список книг.\n","     - `add_book(self, book: Book)`: добавляет новую книгу в библиотеку.\n","     - `borrow_book(self, isbn: str)`: помечает книгу как заимствованную. Если книга не найдена или уже взята, выведите соответствующее сообщение.\n","     - `return_book(self, isbn: str)`: помечает книгу как возвращенную. Если книга не найдена или не была взята взаймы, выведите соответствующее сообщение.\n","     - `list_available_books(self)`: печатает список всех доступных книг в библиотеке.\n","     - `find_book(self, isbn: str)`: возвращает объект книги, если он найден, в противном случае возвращает `None`.\n","\n","3. **Взаимодействие с пользователем**:\n","   - Создайте простое текстовое меню, которое позволит пользователям:\n","     - Добавить книгу\n","     - Одолжить книгу\n","     - Вернуть книгу\n","     - Список доступных книг\n","     - Выйти из программы"],"metadata":{"id":"pnIUdFPcGOVL"}},{"cell_type":"code","source":[],"metadata":{"id":"GKKmdfN8GL6f"},"execution_count":null,"outputs":[]}]}