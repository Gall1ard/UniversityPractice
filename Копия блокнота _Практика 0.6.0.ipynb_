{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1bbYGdWi_dKiB0HoLFBXxshe_0yemJtea","timestamp":1729589954217}]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["\n","\n","---\n","\n"],"metadata":{"id":"tKNG_RzWxG6g"}},{"cell_type":"markdown","source":["# **Дисклеймер**\n","\n","В данной практике будет введен дополнительный критерий: чистота и читаемость кода, а также соблюдение правил описанных в начале практики"],"metadata":{"id":"cFcrKfclKWh0"}},{"cell_type":"markdown","source":["\n","\n","---\n","\n"],"metadata":{"id":"0SnE87X1xDlV"}},{"cell_type":"markdown","source":["# Задание 1\n","\n","**Задача:**\n","\n","Напишите функцию очищающий список от дубликтов\n","\n","\n","*Запрещено:*\n","\n","*   Использовать set() или готовые функции очищающие список от дубликатов\n","\n","Вввод:\n","\n","```\n","apple banana apple 1 3 4 4 5\n","```\n","\n","\n","Вывод:\n","\n","```\n","apple banana 1 3 4 5\n","```\n","\n"],"metadata":{"id":"VxawR9NubT_F"}},{"cell_type":"code","source":["def func(arr):\n","  temp = []\n","\n","  for i in arr:\n","    flag = False\n","\n","    for j in temp:\n","      if i == j: flag = True\n","\n","    if not(flag): temp.append(i)\n","  return temp\n","\n","\n","input_ = input().split()\n","output_ = func(input_)\n","\n","for i in range(len(output_)): print(output_[i], end=' ')"],"metadata":{"id":"ml5gnbPXbeju","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1729590559569,"user_tz":-300,"elapsed":8525,"user":{"displayName":"UniqueG","userId":"12397292054922786937"}},"outputId":"5e899243-620a-415e-a7e9-67d5fb5c74c6"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["apple banana apple 1 3 4 4 5\n","apple\n","banana\n","1\n","3\n","4\n","5\n"]}]},{"cell_type":"markdown","source":["# Задание 2\n","\n","**Задача:**\n","\n","Написать функцию для нахождения простых чисел в диапазоне\n","\n","Ввод:\n","\n","```\n","10, 50\n","```\n","\n","Вывод:\n","\n","```\n","11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47\n","```"],"metadata":{"id":"y05x0eD0cVCC"}},{"cell_type":"code","source":["def primal(d1, d2):\n","  array = []\n","  f_num = (d1 // 6 + 1) if (d1 % 6 != 0) else (d1 // 6)\n","  l_num = d2 // 6 + 1\n","\n","  for i in range(f_num, l_num):\n","    i1 = i * 6 - 1\n","    i2 = i * 6 + 1\n","\n","    if int((i1) ** 0.5) ** 2 != i1 and i1 >= d1: array += [i1]\n","    if int((i2) ** 0.5) ** 2 != i2 and i2 <= d2: array += [i2]\n","\n","    if d1 <= 3: array = [3] + array\n","    if d1 <= 2: array = [2] + array\n","\n","  return array\n","\n","d1, d2 = map(int, input().split(\", \"))\n","print(primal(d1, d2))"],"metadata":{"id":"XSMJnLgrc6Bf","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1729591942527,"user_tz":-300,"elapsed":4392,"user":{"displayName":"UniqueG","userId":"12397292054922786937"}},"outputId":"5ded6dbe-f335-4e39-f843-1d82c7c572cb"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["10, 50\n","[11, 13, 17, 19, 23, 29, 31, 35, 37, 41, 43, 47]\n"]}]},{"cell_type":"markdown","source":["# Задание 3\n","\n","Напишите функцию для объединения двух списков (список ключей и список значении) в словарь\n","\n","*Запрещено:*\n","\n","*   Использования готовых функции для объединения списков (пример: zip() )\n","\n","Дано:\n","\n","```\n","keys = ['a', 'b', 'c', 'e' ]\n","values = [1, 2, 3, 4]\n","```\n","\n","Вывод:\n","```\n","{'a': 1, 'b': 2, 'c': 3, 'e': 4}\n","```\n","\n","\n"],"metadata":{"id":"vYM0LyxxdElN"}},{"cell_type":"code","source":["def merge(arr1, arr2):\n","  mergedDict = {arr1[i]: arr2[i] for i in range(len(arr1))}\n","  return mergedDict\n","\n","\n","print(merge([\"a\", \"b\", \"c\", \"d\"], [1, 2, 3, 4]))"],"metadata":{"id":"CRvhHTjCdvjS","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1729592413253,"user_tz":-300,"elapsed":478,"user":{"displayName":"UniqueG","userId":"12397292054922786937"}},"outputId":"89d68b4a-97fd-459f-da97-57dd5d7a4c64"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["{'a': 1, 'b': 2, 'c': 3, 'd': 4}\n"]}]},{"cell_type":"markdown","source":["# Задание 4\n","\n","Напишите функцию(ии) для подсчета статистических параметров:\n","*   Сумму\n","*   Среднее арифметическое\n","*   Медиану\n","*   Моду\n","\n","\n","*Запрещено:*\n","\n","*   sum()\n","*   sorted()\n","*   и других функции предоставляющих готовое решение задания\n","\n","Дано:\n","\n","```\n","numbers = [1, 2, 2, 3, 4, 5, 6, 7, 8 ,9 ,10]\n","\n","```\n","\n","Вывод:\n","```\n","{'mean': 5.181818181818182, 'median': 5, 'mode': 2, 'sum': 57}\n","```\n"],"metadata":{"id":"L_w8H8i-fQcP"}},{"cell_type":"code","source":["def calc(array):\n","  temp = []\n","  summ, mode = 0, 0\n","\n","  for i in array: summ += i\n","  mean = summ / len(array)\n","\n","  for _ in range(len(array)):\n","    minn = float('inf')\n","    ind = 0\n","\n","    for i in range(len(array)):\n","      if minn > array[i]:\n","        minn = array[i]\n","        ind = i\n","\n","    temp += [minn]\n","    array[ind] = float('inf')\n","\n","  t1 = len(temp) // 2\n","\n","  median = temp[t1] if len(temp) % 2 != 0 else (temp[t1] + temp[t1 - 1]) / 2\n","\n","  c = 1\n","  maxx = -1\n","  for i in range(len(temp) - 1):\n","    if temp[i] == temp[i+1]: c += 1\n","    else: c = 1\n","\n","    if c >= maxx:\n","      maxx = c\n","      mode = temp[i]\n","\n","  return {'mean': mean, 'median': median, 'mode': mode, 'sum': summ}\n","\n","print(calc([1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10]))\n"],"metadata":{"id":"dW6jW_rjfuba","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1729593875224,"user_tz":-300,"elapsed":534,"user":{"displayName":"UniqueG","userId":"12397292054922786937"}},"outputId":"6dff2986-0f87-4878-e73d-d5ff407b7408"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["{'mean': 5.181818181818182, 'median': 5, 'mode': 2, 'sum': 57}\n"]}]},{"cell_type":"markdown","source":["# Задание 5\n","\n","На ввод поступает строка символов. Строка состоит из слов, которые отделены друг от друга пробелами. Необходимо вывести самое длинное слово и его порядковый номер.\n","\n","*Запрещено:*\n","\n","*   len()\n","\n","Дано:\n","\n","```\n","Страдание и боль всегда обязательны для широкого сознания и глубокого сердца.\n","\n","```\n","\n","Вывод:\n","```\n","Самое длинное слово с номером 5: обязательны\n","```"],"metadata":{"id":"hZW0NZ7SgTcp"}},{"cell_type":"code","source":["def lenCalc(line):\n","  maxx = -1\n","  n, c = 0, 1\n","  word = \"\"\n","\n","  for _ in range(line.count(\" \")):\n","    if line.index(\" \") > maxx:\n","      maxx = line.index(\" \")\n","      word = line[:line.index(\" \")]\n","      n = c\n","\n","    c += 1\n","    line = line[line.index(\" \") + 1:]\n","\n","  return f\"Самое длинное слово с номером {n}: {word}\"\n","\n","\n","print(lenCalc(\"Страдание и боль всегда обязательны для широкого сознания и глубокого сердца.\"))"],"metadata":{"id":"rC5DpHHLsDYp","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1729594351426,"user_tz":-300,"elapsed":521,"user":{"displayName":"UniqueG","userId":"12397292054922786937"}},"outputId":"f7765d9d-0559-49b9-f827-99bfa3b80e7d"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Самое длинное слово с номером 5: обязательны\n"]}]},{"cell_type":"markdown","source":["# Задание 6\n","\n","Напишите программу, для управления оценками студентов, со следующими функциями:\n","\n","* Добавление информации о студенте и его оценках.\n","* Подсчет среднего балла студента.\n","* Получение списка всех студентов с их средними баллами.\n","* Поиск студента по имени и вывод его оценок и среднего балла.\n","\n","\n","\n"],"metadata":{"id":"k5BzJW5ZeaQN"}},{"cell_type":"code","source":["def search(name, fCode):\n","  global students\n","  global grades\n","  ind = []\n","\n","  for n in range(len(students)):\n","    if name in students[n]: ind.append(n)\n","\n","  print(f\"Список студентов с именем: {name}\")\n","  for i in ind:\n","    if fCode == 1:\n","      print(f\"{students[i]}: {grades[i]}\\\n","      (avg: {round(sum(grades[i]) / len(grades[i]), 3)})\")\n","    else:\n","      print(f\"{students[i]} (avg: {round(sum(grades[i]) / len(grades[i]), 3)})\")\n","\n","\n","def listOfStuds():\n","  global students\n","  global grades\n","\n","  for i in range(len(grades)):\n","    print(f\"{students[i]}:\\\n","    (avg grade: {round(sum(grades[i]) / len(grades[i]), 3)})\")\n","\n","\n","def intro():\n","  print(\"-Управление оценками студентов-\\n\")\n","  print(\"1 - Добавить информацию о студенте и его оценках\")\n","  print(\"2 - Подсчитать средний балл студента\")\n","  print(\"3 - Вывести список всех студентов и их средние баллы\")\n","  print(\"4 - Найти студента по имени и вывести его успеваемость\")\n","  print(\"5 - Завершить работу приложения\")\n","\n","\n","grades = []\n","students = []\n","\n","intro()\n","while True:\n","  cmd = int(input())\n","\n","  if cmd == 1:\n","    print(\"Введите ФИО студента (каждое слово с большой буквы через пробел)\")\n","    info = input()\n","\n","    print(\"Введите оценки студента (через пробел)\")\n","    gr = list(map(int, input().split()))\n","\n","    students.append(info)\n","    grades.append(gr)\n","\n","    print(\"Студент успешно добавлен в список!\")\n","\n","  elif cmd == 2:\n","    print(\"Введите имя или ФИО студента (с большой буквы через пробел)\")\n","    info = input()\n","\n","    search(info, 0)\n","\n","  elif cmd == 3: listOfStuds()\n","\n","  elif cmd == 4:\n","    print(\"Введите имя или ФИО студента (с большой буквы через пробел)\")\n","    info = input()\n","\n","    search(info, 1)\n","\n","  elif cmd == 5:\n","    print(\"Завершение работы приложения...\")\n","    break\n","\n","  else:\n","    print(\"Введён невеный номер команды! Попробуйте ещё раз\")\n"],"metadata":{"id":"cvhlltVbdyoL","colab":{"base_uri":"https://localhost:8080/","height":669},"executionInfo":{"status":"error","timestamp":1729597183939,"user_tz":-300,"elapsed":107273,"user":{"displayName":"UniqueG","userId":"12397292054922786937"}},"outputId":"6302c734-3e47-45d4-e566-f8afe3e1f7c5"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["-Управление оценками студентов-\n","\n","1 - Добавить информацию о студенте и его оценках\n","2 - Подсчитать средний балл студента\n","3 - Вывести список всех студентов и их средние баллы\n","4 - Найти студента по имени и вывести его успеваемость\n","5 - Завершить работу приложения\n","1\n","Введите ФИО студента (каждое слово с большой буквы через пробел)\n","Иванов Иван Иванович\n","Введите оценки студента (через пробел)\n","5 4 7 8 9 \n","Студент успешно добавлен в список!\n","2\n","Введите имя или ФИО студента (с большой буквы через пробел)\n","Иванов Иван Иванович\n","Список студентов с именем: Иванов Иван Иванович\n","Иванов Иван Иванович (avg: 6.6)\n"]},{"output_type":"error","ename":"KeyboardInterrupt","evalue":"Interrupted by user","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mKeyboardInterrupt\u001b[0m                         Traceback (most recent call last)","\u001b[0;32m<ipython-input-24-8289efb0974f>\u001b[0m in \u001b[0;36m<cell line: 43>\u001b[0;34m()\u001b[0m\n\u001b[1;32m     42\u001b[0m \u001b[0mintro\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     43\u001b[0m \u001b[0;32mwhile\u001b[0m \u001b[0;32mTrue\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 44\u001b[0;31m   \u001b[0mcmd\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0minput\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     45\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     46\u001b[0m   \u001b[0;32mif\u001b[0m \u001b[0mcmd\u001b[0m \u001b[0;34m==\u001b[0m \u001b[0;36m1\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/ipykernel/kernelbase.py\u001b[0m in \u001b[0;36mraw_input\u001b[0;34m(self, prompt)\u001b[0m\n\u001b[1;32m    849\u001b[0m                 \u001b[0;34m\"raw_input was called, but this frontend does not support input requests.\"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    850\u001b[0m             )\n\u001b[0;32m--> 851\u001b[0;31m         return self._input_request(str(prompt),\n\u001b[0m\u001b[1;32m    852\u001b[0m             \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_parent_ident\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    853\u001b[0m             \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_parent_header\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/ipykernel/kernelbase.py\u001b[0m in \u001b[0;36m_input_request\u001b[0;34m(self, prompt, ident, parent, password)\u001b[0m\n\u001b[1;32m    893\u001b[0m             \u001b[0;32mexcept\u001b[0m \u001b[0mKeyboardInterrupt\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    894\u001b[0m                 \u001b[0;31m# re-raise KeyboardInterrupt, to truncate traceback\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 895\u001b[0;31m                 \u001b[0;32mraise\u001b[0m \u001b[0mKeyboardInterrupt\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"Interrupted by user\"\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    896\u001b[0m             \u001b[0;32mexcept\u001b[0m \u001b[0mException\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0me\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    897\u001b[0m                 \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mlog\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mwarning\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"Invalid Message:\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mexc_info\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mTrue\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mKeyboardInterrupt\u001b[0m: Interrupted by user"]}]},{"cell_type":"markdown","source":["# Задание 7\n","\n","\n","**Задача:**\n","\n","Создайте приложение-викторину с командной строкой, которое задает пользователям вопросы по различным темам и отслеживает их результаты.\n","\n","Ключевые особенности:\n","\n","*   Хранение данных о вопросах и ответах на них, а также баллов за каждый вопрос\n","*   Реализуйте функцию для представления вопросов, принятия ответов пользователей и предоставления обратной связи о том, являются ли ответы правильными или неправильными.\n","*  После завершения викторины отобразите общий балл пользователя из числа ответов на вопросы.\n","*  Реализуйте функцию добавления нового вопроса\n","*  Реализуйте функцию перемешивания вопросов, для отображения случайного вопроса\n"],"metadata":{"id":"iQ8Z-7PYgu1_"}},{"cell_type":"code","source":["import random\n","\n","quests = [\"Сколько буквв слове 'Ёж'?\", \"Столица Камбоджи?\", \"Официальный язык Венгрии?\", \"Как будет по-фински 'Кот'?\", \"Сколько букв в слове 'Пять' на польском?\", \"Число 45 в 4-чной СС?\", \"Флаг какой страны имеет триколор, но не имеющий ни один из цветов флага РФ?\", \"Сколько букв в слове 'Остров' на шведском?\"]\n","ans = [\"8\", \"Пномпень\", \"Венгерский\", \"Kissa\", \"4\", \"231\", \"Ямайка\", \"1\"]\n","points = [1, 10, 2, 5, 3, 8, 12, 15]\n","\n","def engine(arr1, arr2, arr3, arr4):\n","  global score\n","  for j in range(5):\n","    i = arr4[j]\n","    print(f\"{arr1[i]}\\n---------\")\n","    ans = input(\"Ваш ответ (с большой буквы): \")\n","\n","    if ans in arr2[i]:\n","      print(\"Всё верно!\")\n","      score += arr3[i]\n","    else: print(\"Ответ неверный!\")\n","\n","\n","def shuf(arr):\n","  random.shuffle(arr)\n","  return arr\n","\n","\n","score = 0\n","\n","\n","while True:\n","  print(\"Добро пожаловать на викторину! Вам зададут 5 вопросов\")\n","  print(\"За каждый правильный ответ вам будет начислены очки\\n\")\n","\n","  engine(quests, ans, points, shuf([0, 1, 2, 3, 4, 5, 6, 7]))\n","\n","  print(f\"Ваш результат: {score}\")\n","  cmd = int(input((\"Хотите добавить свой вопрос? Да - 1, Нет - 2: \")))\n","  if cmd == 1:\n","    q = input(\"Введите вопрос: \")\n","    a = input(\"Ответ: \")\n","    s = int(input(\"Кол-во очков: \"))\n","\n","    quests.append(q)\n","    ans.append(a)\n","    points.append(p)\n","\n","    print(\"Вопрос добавлен\")\n","  break\n","\n"],"metadata":{"id":"DhxyYwHwh2V4","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1730099053426,"user_tz":-300,"elapsed":39258,"user":{"displayName":"UniqueG","userId":"12397292054922786937"}},"outputId":"054bf46a-b713-4bba-b8ec-070b28aa887c"},"execution_count":7,"outputs":[{"name":"stdout","output_type":"stream","text":["Добро пожаловать на викторину! Вам зададут 5 вопросов\n","За каждый правильный ответ вам будет начислены очки\n","\n","[2, 5, 0, 3, 4, 1, 6, 7]\n","Число 45 в 4-чной СС?\n","---------\n","Ваш ответ (с большой буквы): 132\n","Ответ неверный!\n","Сколько буквв слове 'Ёж'?\n","---------\n","Ваш ответ (с большой буквы): 8\n","Всё верно!\n","Флаг какой страны имеет триколор, но не имеющий ни один из цветов флага РФ?\n","---------\n","Ваш ответ (с большой буквы): Ямайка\n","Всё верно!\n","Столица Камбоджи?\n","---------\n","Ваш ответ (с большой буквы): Пномпень\n","Всё верно!\n","Официальный язык Венгрии?\n","---------\n","Ваш ответ (с большой буквы): Венгерский\n","Всё верно!\n","Ваш результат: 25\n","Хотите добавить свой вопрос? Да - 1, Нет - 2: 2\n"]}]}]}