{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1fct_CW6CXNQ7LoEF2ZJ4hoyr-wUtTlNk","timestamp":1727775236494}]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["ФИО"],"metadata":{"id":"phMKaFq3DN13"}},{"cell_type":"code","execution_count":null,"metadata":{"id":"3CWpaI7SDK8t"},"outputs":[],"source":["Сучков Павел Алексеевич"]},{"cell_type":"markdown","source":["**Во всей практике нельзя применять библиотеки предоставляющие готовые решения!**"],"metadata":{"id":"jyIy3GOgFOCe"}},{"cell_type":"markdown","source":["# **Задача 1.**\n"],"metadata":{"id":"XizmlL1RK2t3"}},{"cell_type":"markdown","source":["\n","\n","Типы данных Напишите программу на Python, которая принимает список чисел в качестве входных данных от пользователя, а затем выводит сумму, среднее значение и максимальное значение из списка.\n","\n","Дано:\n","```\n","1 2 3 4 5 6 7\n","```\n","Вывод:\n","\n","```\n","Сумма чисел: 28\n","Среднее арифм.: 4.0\n","Максимальное значение: 7\n","```\n","\n"],"metadata":{"id":"p0v6KtHTFKSd"}},{"cell_type":"code","source":["u = list(map(int, input().split()))\n","summ, maxx = 0, -1\n","for i in u:\n","  summ += i\n","  maxx = maxx if i < maxx else i\n","print(summ, summ / len(u), maxx)"],"metadata":{"id":"0e1Virl0FpF6","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1727877159427,"user_tz":-300,"elapsed":5458,"user":{"displayName":"UniqueG","userId":"12397292054922786937"}},"outputId":"cc4769d5-e15f-49ae-9332-8d83ef35ead4"},"execution_count":12,"outputs":[{"output_type":"stream","name":"stdout","text":["1 2 3 4 5 6 7\n","28 4.0 7\n"]}]},{"cell_type":"markdown","source":["# **Задача 2.**"],"metadata":{"id":"uFluc5OSK0NH"}},{"cell_type":"markdown","source":["\n","Напишите программу на Python, которая принимает список слов в качестве входных данных от пользователя, а затем распечатывает список в обратном порядке.\n","\n","Ввод:\n","\n","```\n","апельсин мандарин яблоко\n","```\n","\n","Вывод:\n","\n","```\n","яблоко мандарин апельсин\n","```"],"metadata":{"id":"6T8vg324GG4Z"}},{"cell_type":"code","source":["u = input().split()\n","for i in range(len(u)-1, -1, -1): print(u[i], end=' ')"],"metadata":{"id":"v3AWj4ufGKox","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1727775613691,"user_tz":-300,"elapsed":2646,"user":{"displayName":"UniqueG","userId":"12397292054922786937"}},"outputId":"96494c5d-2a81-4c22-c21d-87670d25815e"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["апельсин мандарин яблоко\n","яблоко мандарин апельсин "]}]},{"cell_type":"markdown","source":["# **Задача 3**"],"metadata":{"id":"D1KkCxtIKxRx"}},{"cell_type":"markdown","source":["Простой чат-бот\n","Создайте простого чат-бота, который отвечает на основные запросы пользователей. Программа должна использовать условные выражения для определения намерений пользователя и последующего соответствующего ответа.\n","\n","Чат бот может:\n","\n","- помогать складывать числа\n","- подсказывать фильм, музыку и тд (из заранее созданного списка)\n","- создавать список дел (а также выводить его, обновлять, очищать)\n","\n","Интерфейс чат-бота на ваше усмотрение, это могут быть как заранее определенные команды, так и к примеру вызов команды по номеру\n","\n","*Реализовать без использования функций*\n","\n","Пример:\n","\n","Ввод:\n","\n","```\n","Олег, какую мызыку посоветуешь?\n","```\n","\n","Вывод:\n","\n","```\n","Я бы посоветовал вам: Led Zeppelin Stairway to Heaven\n","```"],"metadata":{"id":"Yq8Jgb9yHvSi"}},{"cell_type":"code","source":["mu_ = 0\n","mo_ = 0\n","flag1 = True\n","mus_feed = [\"Forrest day - Sleepwalk\", \"Tiscore - Drunk\", \"AJR - 100 Bad Days\", \"TheFatRat - Jackpot\", \"BlackGryph0n - Insane\"]\n","mov_feed = [\"Cruella\", \"Angry Birds Movie\", \"Zootopia\", \"Pirates of the Carribean - The Dead Man's chest\"]\n","task_manager = []\n","\n","\n","print(\"You're using KLChatBot. I highly recommend to use valid commands\")\n","print(\"Давайте начнём. Что бы вы хотели?\")\n","print(\"Я могу порекомендовать фильм, посоветовать музыку, поскладывать числа, не более. Просто попросите меня\")\n","print(\"Однако я учусь, поэтому, пожалуйста, пишите на русском.\\nТакже если вы мне напишете конкретные названия композиций, я могу не сориентироваться\")\n","print(\"Для выхода из бота введите 'Exit'\\n\")\n","while True:\n","    user_message = input().lower()\n","\n","    if \"совет\" in user_message or \"реком\" in user_message:\n","        while True:\n","            if \"музык\" in user_message and (\"фильм\" in user_message or \"кино\" in user_message):\n","                print(\"Talking about music, I would recommend You: \" + mus_feed[mu_ % len(mus_feed)])\n","                print(\"As for films, You would probably like: \" + mov_feed[mo_ % len(mov_feed)])\n","                mu_ += 1\n","                mo_ += 1\n","            elif \"музык\" in user_message:\n","                print(\"Oh, I know some good music! Try listening to: \" + mus_feed[mu_ % len(mus_feed)])\n","                mu_ += 1\n","            elif \"фильм\" in user_message or \"кино\" in user_message:\n","                print(\"A movie... I would recommend: \" + mov_feed[mo_ % len(mov_feed)])\n","                mo_ += 1\n","            else:\n","                print(\"I am sorry, I don't know what to recommend you:(\")\n","            print(\"'Всё' или 'Ещё'?\")\n","            tt = input()\n","            if tt == \"Ещё\":\n","                print(\"Продолжим. Что бы вы хотели?\")\n","\n","                continue\n","            else:\n","                print(\"You either entered invalid command or asked to stop\")\n","                break\n","    elif (\"склад\" in user_message or \"сложи\" in user_message) and \"числ\" in user_message:\n","        temp = input(\"Введите числа для сложения через пробел: \")\n","        print(\"Sum is: \" + str(sum(list(map(int, temp.split())))))\n","        print(\"Продолжим. Что бы вы хотели?\")\n","    elif \"дел\" in user_message or \"задач\" in user_message:\n","        print(\"Открывают менеджер задач\")\n","        for i in task_manager: print(i)\n","        print(\"\\nType the task you want to interact with. Press 'Enter' and then use one of the following commands:\")\n","        print(\"Add - to add the entered task to the list\")\n","        print(\"Delete - to delete the entered task from the list\")\n","\n","        s1 = input()\n","        s2 = input()\n","        while s2 != \"Add\" and s2 != \"Delete\":\n","            print(\"Invalid command\")\n","            s2 = input()\n","\n","        if s2 == \"Delete\":\n","            temp = []\n","            for t in task_manager:\n","                if t != task: temp.append(t)\n","            task_manager = temp\n","            temp = []\n","            print(\"Task removed. Going back to main chat\")\n","\n","        elif s2 == \"Add\":\n","            print(\"Task added. Going back to main chat\")\n","            task_manager.append(s1)\n","    elif user_message == \"Exit\":\n","        break\n","    else:\n","        print(\"I am not made for entertainment>:( I can't talk with you freely. Going back to main chat\")\n","\n","\n"],"metadata":{"id":"fmW-tmUtINN9"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# **Задача 4.**\n"],"metadata":{"id":"PHXBfyc6Ko7D"}},{"cell_type":"markdown","source":["Камень, ножницы, бумага\n","\n","Создайте игру в Камень, ножницы, бумагу, в которой пользователь может играть против компьютера. Программа должна запросить выбор пользователя, а затем сгенерировать выбор компьютера. Затем программа должна определить победителя на основе правил игры.\n","\n","**Этап 1:**\n","\n","Определение победителя\n","\n","**Этап 2:**\n","  \n","Игра до 3 побед\n","\n","\n","Вввод для \"Этап 1\":\n","\n","```\n","Камень\n","```\n","\n","Вывод:\n","\n","```\n","Компьютер: Ножницы\n","Игрок: Камень\n","Победа: Игрок\n","```"],"metadata":{"id":"jnKWeYleI0j6"}},{"cell_type":"code","source":["import random\n","\n","win = [(\"Камень\", \"Бумага\"), (\"Ножницы\", \"Камень\"), (\"Бумага\", \"Ножницы\")]\n","correct = [\"Камень\", \"Бумага\", \"Ножницы\"]\n","us = 0\n","cs = 0\n","\n","while True:\n","  c = input()\n","  while not(c in correct):\n","    print(\"Incorrect. Try again\")\n","    c = input()\n","  cc = correct[random.randint(0, 2)]\n","\n","  print(\"Компьютер: \" + cc)\n","  print(\"Игрок: \" + c)\n","  if c == cc:\n","    print(\"Ничья\")\n","  else:\n","    for i in win:\n","      if (cc, c) == i:\n","        print(\"Победа: Игрок\\n\")\n","        us += 1\n","        break\n","      if (c, cc) == i:\n","        print(\"Победа: Компьютер\\n\")\n","        cs += 1\n","        break\n","  if us == 3:\n","    print(\"Победа: Игрок(3 победы)\")\n","    break\n","  if cs == 3:\n","    print(\"Победа: Компьютер(3 победы)\")\n","    break\n"],"metadata":{"id":"ooIPCRe_JHkX","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1727784532571,"user_tz":-300,"elapsed":34789,"user":{"displayName":"UniqueG","userId":"12397292054922786937"}},"outputId":"e40d82d5-7753-4df0-bff8-1e13a5adf0d1"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Камень\n","Компьютер: Ножницы\n","Игрок: Камень\n","Победа: Игрок\n","\n","Ножницы\n","Компьютер: Бумага\n","Игрок: Ножницы\n","Победа: Игрок\n","\n","Бумага\n","Компьютер: Камень\n","Игрок: Бумага\n","Победа: Игрок\n","\n","Победа: Компьютер\n"]}]},{"cell_type":"markdown","source":["# **Задача 6.**"],"metadata":{"id":"Hg4FJNFbLHQO"}},{"cell_type":"markdown","source":["Создайте игру \"Палач\" или \"Виселица\", в которой пользователь должен угадать слово, предлагая буквы. Программа должна выбрать случайное слово, а затем разрешить пользователю угадывать буквы. После каждого угадывания программа должна сообщать пользователю, есть ли в слове буква или нет.\n","\n","**Этап 1**\n","Создать саму игру\n","\n","**Этап 2:**\n","Ввести подсчет количества очков и ограничения на попытки"],"metadata":{"id":"OHqj3HJuLJgY"}},{"cell_type":"code","source":["import random\n","import os\n","words = [\"лагерь\", \"столица\", \"норма\", \"тенге\", \"шапка\", \"оружие\", \"прорубь\", \"мытищи\", \"зигзаг\", \"восьмёрка\", \"тень\", \"ящик\", \"йогурт\", \"мем\", \"шорох\"]\n","n, p = 10, 500\n","\n","while True:\n","  word = words[random.randint(0, len(words)-1)]\n","  line = \"_ \" * len(word)\n","  total = 0\n","  print(\"\\nКомпьтер загадал слово:\\n\" + \"_ \" * len(word) + \"\\nВведите одну букву. Если она есть в слове, то она встанет на место\\nЗа каждую ошибку количество получаемых очков уменьшается на 50, а также вы теряете 150 очков\")\n","  print(f\"Количество оставшихся попыток: {n}\")\n","  while True:\n","    s = input().lower()\n","    t = 0\n","    for i in range(len(word)):\n","      if s == word[i]:\n","        line = line[:i*2] + s + line[i*2+1:]\n","        total += p\n","        t = 1\n","    if t == 0:\n","      n -= 1\n","      p -= 50\n","    print(f\"{line}\\nКоличество оставшихся попыток: {n}\")\n","    if not(\"_\" in line):\n","      print(f\"Вы выиграли! Ваше количество очков: {total}\")\n","      break\n","    if n == 0:\n","      print(\"Вы проиграли!\")\n","      break\n","  print(\"Введите 'Снова', чтобы начать сначала или любое другое слово для выхода\")\n","  com = input()\n","  if com.lower() != \"снова\": break\n","\n","\n"],"metadata":{"id":"0N2zCYwVLiIw","colab":{"base_uri":"https://localhost:8080/","height":894},"executionInfo":{"status":"error","timestamp":1727876033685,"user_tz":-300,"elapsed":72596,"user":{"displayName":"UniqueG","userId":"12397292054922786937"}},"outputId":"8ea59ecb-f6d4-45ba-c06c-9df0c63cdc95"},"execution_count":5,"outputs":[{"output_type":"stream","name":"stdout","text":["Компьтер загадал слово:\n","_ _ _ _ \n","Введите одну букву. Если она есть в слове, то она встанет на место\n","За каждую ошибку количество получаемых очков уменьшается на 50, а также вы теряете 150 очков\n","Количество оставшихся попыток: 10\n","я\n","_ _ _ _ \n","Количество оставшихся попыток: 9\n","т\n","т _ _ _ \n","Количество оставшихся попыток: 9\n","е\n","т е _ _ \n","Количество оставшихся попыток: 9\n","\n","т е _ _ \n","Количество оставшихся попыток: 8\n","н\n","т е н _ \n","Количество оставшихся попыток: 8\n","ь\n","т е н ь \n","Количество оставшихся попыток: 8\n","Вы выиграли! Ваше количество очков: 1700\n","Введите 'Снова', чтобы начать сначала или любое другое слово для выхода\n","Снова\n","Компьтер загадал слово:\n","_ _ _ _ _ _ _ _ _ \n","Введите одну букву. Если она есть в слове, то она встанет на место\n","За каждую ошибку количество получаемых очков уменьшается на 50, а также вы теряете 150 очков\n","Количество оставшихся попыток: 8\n"]},{"output_type":"error","ename":"KeyboardInterrupt","evalue":"Interrupted by user","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mKeyboardInterrupt\u001b[0m                         Traceback (most recent call last)","\u001b[0;32m<ipython-input-5-ef59767977d0>\u001b[0m in \u001b[0;36m<cell line: 6>\u001b[0;34m()\u001b[0m\n\u001b[1;32m     11\u001b[0m   \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34mf\"Количество оставшихся попыток: {n}\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     12\u001b[0m   \u001b[0;32mwhile\u001b[0m \u001b[0;32mTrue\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 13\u001b[0;31m     \u001b[0ms\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0minput\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mlower\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     14\u001b[0m     \u001b[0mt\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;36m0\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     15\u001b[0m     \u001b[0mos\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msystem\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'clear'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/ipykernel/kernelbase.py\u001b[0m in \u001b[0;36mraw_input\u001b[0;34m(self, prompt)\u001b[0m\n\u001b[1;32m    849\u001b[0m                 \u001b[0;34m\"raw_input was called, but this frontend does not support input requests.\"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    850\u001b[0m             )\n\u001b[0;32m--> 851\u001b[0;31m         return self._input_request(str(prompt),\n\u001b[0m\u001b[1;32m    852\u001b[0m             \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_parent_ident\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    853\u001b[0m             \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_parent_header\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/ipykernel/kernelbase.py\u001b[0m in \u001b[0;36m_input_request\u001b[0;34m(self, prompt, ident, parent, password)\u001b[0m\n\u001b[1;32m    893\u001b[0m             \u001b[0;32mexcept\u001b[0m \u001b[0mKeyboardInterrupt\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    894\u001b[0m                 \u001b[0;31m# re-raise KeyboardInterrupt, to truncate traceback\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 895\u001b[0;31m                 \u001b[0;32mraise\u001b[0m \u001b[0mKeyboardInterrupt\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"Interrupted by user\"\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    896\u001b[0m             \u001b[0;32mexcept\u001b[0m \u001b[0mException\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0me\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    897\u001b[0m                 \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mlog\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mwarning\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"Invalid Message:\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mexc_info\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mTrue\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mKeyboardInterrupt\u001b[0m: Interrupted by user"]}]},{"cell_type":"markdown","source":["# **Задача 7.**\n"],"metadata":{"id":"w0x3QFGzKtDD"}},{"cell_type":"markdown","source":["\n","**Цифра на определенном месте:**\n","\n","Последовательно записан натуральный ряд чисел.\n","\n","Какая цифра стоит в N позиции\n","\n","\n","Вввод:\n","\n","```\n","Введите номер позиции: 1234567890\n","```\n","\n","Вывод:\n","\n","```\n","8\n","```"],"metadata":{"id":"QqZArcpHJxVj"}},{"cell_type":"code","source":["N = int(input(\"Введите номер позиции: \"))\n","c = 1\n","series = \"\"\n","while len(series) < N:\n","  series += str(c)\n","  c += 1\n","print(series[N-1])"],"metadata":{"id":"LwjYwBGcKiJ9","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1727876927549,"user_tz":-300,"elapsed":9789,"user":{"displayName":"UniqueG","userId":"12397292054922786937"}},"outputId":"3f03c488-72a5-406a-a6ea-6704193bfad0"},"execution_count":10,"outputs":[{"output_type":"stream","name":"stdout","text":["Введите номер позиции: 65\n","7\n"]}]}]}